// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint, unused_field
import 'dart:ffi' as ffi;

@ffi.Native<
        ffi.Int Function(ffi.Pointer<interactor_dart>,
            ffi.Pointer<interactor_module_dart_configuration>, ffi.Uint8)>(
    symbol: 'interactor_dart_initialize',
    assetId: 'interactor-bindings',
    isLeaf: true)
external int interactor_dart_initialize(
  ffi.Pointer<interactor_dart> interactor,
  ffi.Pointer<interactor_module_dart_configuration> configuration,
  int id,
);

@ffi.Native<ffi.Int Function(ffi.Pointer<interactor_dart>)>(
    symbol: 'interactor_dart_peek',
    assetId: 'interactor-bindings',
    isLeaf: true)
external int interactor_dart_peek(
  ffi.Pointer<interactor_dart> interactor,
);

@ffi.Native<
        ffi.Void Function(ffi.Pointer<interactor_dart>, ffi.Int,
            ffi.Pointer<interactor_message>)>(
    symbol: 'interactor_dart_call_native',
    assetId: 'interactor-bindings',
    isLeaf: true)
external void interactor_dart_call_native(
  ffi.Pointer<interactor_dart> interactor,
  int target_ring_fd,
  ffi.Pointer<interactor_message> message,
);

@ffi.Native<
        ffi.Void Function(
            ffi.Pointer<interactor_dart>, ffi.Pointer<interactor_message>)>(
    symbol: 'interactor_dart_callback_to_native',
    assetId: 'interactor-bindings',
    isLeaf: true)
external void interactor_dart_callback_to_native(
  ffi.Pointer<interactor_dart> interactor,
  ffi.Pointer<interactor_message> message,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<interactor_dart>, ffi.Int)>(
    symbol: 'interactor_dart_cqe_advance',
    assetId: 'interactor-bindings',
    isLeaf: true)
external void interactor_dart_cqe_advance(
  ffi.Pointer<interactor_dart> interactor,
  int count,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<interactor_dart>)>(
    symbol: 'interactor_dart_destroy',
    assetId: 'interactor-bindings',
    isLeaf: true)
external void interactor_dart_destroy(
  ffi.Pointer<interactor_dart> interactor,
);

final class interactor_message extends ffi.Struct {
  @ffi.Uint64()
  external int id;

  @ffi.Uint64()
  external int source;

  @ffi.Uint64()
  external int target;

  @ffi.Uint64()
  external int owner;

  @ffi.Uint64()
  external int method;

  external ffi.Pointer<ffi.Void> input;

  @ffi.Size()
  external int input_size;

  external ffi.Pointer<ffi.Void> output;

  @ffi.Size()
  external int output_size;

  @ffi.Uint16()
  external int flags;
}

final class interactor_completion_event extends ffi.Struct {
  @ffi.UnsignedLongLong()
  external int user_data;

  @ffi.Int()
  external int res;

  @ffi.UnsignedInt()
  external int flags;

  @ffi.Array.multi([2])
  external ffi.Array<ffi.UnsignedLongLong> big_cqe;
}

final class interactor_module_dart_configuration extends ffi.Struct {
  @ffi.Size()
  external int quota_size;

  @ffi.Size()
  external int preallocation_size;

  @ffi.Size()
  external int slab_size;

  @ffi.Size()
  external int static_buffers_capacity;

  @ffi.Size()
  external int static_buffer_size;

  @ffi.Size()
  external int ring_size;

  @ffi.Double()
  external double delay_randomization_factor;

  @ffi.Uint64()
  external int max_delay_micros;

  @ffi.Uint64()
  external int cqe_wait_timeout_millis;

  @ffi.Uint32()
  external int ring_flags;

  @ffi.Uint32()
  external int base_delay_micros;

  @ffi.Uint32()
  external int cqe_wait_count;

  @ffi.Uint32()
  external int cqe_peek_count;
}

final class interactor_module_native_configuration extends ffi.Struct {
  @ffi.Uint64()
  external int cqe_wait_timeout_millis;

  @ffi.Size()
  external int quota_size;

  @ffi.Size()
  external int preallocation_size;

  @ffi.Size()
  external int slab_size;

  @ffi.Size()
  external int static_buffers_capacity;

  @ffi.Size()
  external int static_buffer_size;

  @ffi.Size()
  external int ring_size;

  @ffi.Int32()
  external int ring_flags;

  @ffi.Uint32()
  external int cqe_wait_count;

  @ffi.Uint32()
  external int cqe_peek_count;
}

final class io_uring extends ffi.Opaque {}

final class io_uring_cqe extends ffi.Opaque {}

final class interactor_dart extends ffi.Struct {
  external ffi.Pointer<io_uring> ring;

  @ffi.Size()
  external int ring_size;

  @ffi.Uint64()
  external int cqe_wait_timeout_millis;

  @ffi.Uint64()
  external int max_delay_micros;

  @ffi.Double()
  external double delay_randomization_factor;

  external ffi.Pointer<ffi.Pointer<interactor_dart_completion_event>>
      completions;

  @ffi.Int32()
  external int descriptor;

  @ffi.Uint32()
  external int ring_flags;

  @ffi.Uint32()
  external int cqe_wait_count;

  @ffi.Uint32()
  external int cqe_peek_count;

  @ffi.Uint32()
  external int base_delay_micros;

  @ffi.Uint8()
  external int id;
}

typedef interactor_dart_completion_event = io_uring_cqe;
